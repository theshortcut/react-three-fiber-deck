{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/print","result":{"data":{"deck":{"id":"af281d72-bc7e-55d9-b376-0bbcd6cd488d","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = customTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"react-three-fiber\"), mdx(\"hr\", null), mdx(\"h1\", null, \"What is it?\"), mdx(\"ul\", null, mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"React renderer for Three.js\"), mdx(\"li\", null, \"targets both web and react-native\"), mdx(\"li\", null, \"Created by Paul Henschel (drcmda / 0xca0a)\"), mdx(\"li\", null, \"Under the react-spring org in github\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Ok so why?\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"file=./basic-three-js.js title=\\\"Example Three.js code\\\"\",\n    \"file\": \"./basic-three-js.js\",\n    \"title\": \"\\\"Example\",\n    \"Three.js\": true,\n    \"code\\\"\": true\n  }), \"const scene = new THREE.Scene();\\nconst camera = new THREE.PerspectiveCamera(\\n  75, window.innerWidth / window.innerHeight,\\n  0.1, 1000);\\nconst renderer = new THREE.WebGLRenderer();\\nrenderer.setSize( window.innerWidth, window.innerHeight );\\ndocument.body.appendChild( renderer.domElement );\\n\\nvar geometry = new THREE.BoxGeometry( 1, 1, 1 );\\nvar material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\\nvar cube = new THREE.Mesh( geometry, material );\\nscene.add( cube );\\n\\ncamera.position.z = 5;\\n\\nfunction animate() {\\n  requestAnimationFrame( animate );\\n  cube.rotation.x += 0.01;\\n  cube.rotation.y += 0.01;\\n    renderer.render( scene, camera );\\n}\\n\\nanimate();\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"1:7 file=./basic-three-js.js title=\\\"Create a scene\\\"\",\n    \"1:7\": true,\n    \"file\": \"./basic-three-js.js\",\n    \"title\": \"\\\"Create\",\n    \"a\": true,\n    \"scene\\\"\": true\n  }), \"const scene = new THREE.Scene();\\nconst camera = new THREE.PerspectiveCamera(\\n  75, window.innerWidth / window.innerHeight,\\n  0.1, 1000);\\nconst renderer = new THREE.WebGLRenderer();\\nrenderer.setSize( window.innerWidth, window.innerHeight );\\ndocument.body.appendChild( renderer.domElement );\\n\\nvar geometry = new THREE.BoxGeometry( 1, 1, 1 );\\nvar material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\\nvar cube = new THREE.Mesh( geometry, material );\\nscene.add( cube );\\n\\ncamera.position.z = 5;\\n\\nfunction animate() {\\n  requestAnimationFrame( animate );\\n  cube.rotation.x += 0.01;\\n  cube.rotation.y += 0.01;\\n    renderer.render( scene, camera );\\n}\\n\\nanimate();\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"9:12 file=./basic-three-js.js title=\\\"Create a box and add it to the scene\\\"\",\n    \"9:12\": true,\n    \"file\": \"./basic-three-js.js\",\n    \"title\": \"\\\"Create\",\n    \"a\": true,\n    \"box\": true,\n    \"and\": true,\n    \"add\": true,\n    \"it\": true,\n    \"to\": true,\n    \"the\": true,\n    \"scene\\\"\": true\n  }), \"const scene = new THREE.Scene();\\nconst camera = new THREE.PerspectiveCamera(\\n  75, window.innerWidth / window.innerHeight,\\n  0.1, 1000);\\nconst renderer = new THREE.WebGLRenderer();\\nrenderer.setSize( window.innerWidth, window.innerHeight );\\ndocument.body.appendChild( renderer.domElement );\\n\\nvar geometry = new THREE.BoxGeometry( 1, 1, 1 );\\nvar material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\\nvar cube = new THREE.Mesh( geometry, material );\\nscene.add( cube );\\n\\ncamera.position.z = 5;\\n\\nfunction animate() {\\n  requestAnimationFrame( animate );\\n  cube.rotation.x += 0.01;\\n  cube.rotation.y += 0.01;\\n    renderer.render( scene, camera );\\n}\\n\\nanimate();\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"14\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"14 file=./basic-three-js.js title=\\\"Move the camera so we can see the box\\\"\",\n    \"file\": \"./basic-three-js.js\",\n    \"title\": \"\\\"Move\",\n    \"the\": true,\n    \"camera\": true,\n    \"so\": true,\n    \"we\": true,\n    \"can\": true,\n    \"see\": true,\n    \"box\\\"\": true\n  }), \"const scene = new THREE.Scene();\\nconst camera = new THREE.PerspectiveCamera(\\n  75, window.innerWidth / window.innerHeight,\\n  0.1, 1000);\\nconst renderer = new THREE.WebGLRenderer();\\nrenderer.setSize( window.innerWidth, window.innerHeight );\\ndocument.body.appendChild( renderer.domElement );\\n\\nvar geometry = new THREE.BoxGeometry( 1, 1, 1 );\\nvar material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\\nvar cube = new THREE.Mesh( geometry, material );\\nscene.add( cube );\\n\\ncamera.position.z = 5;\\n\\nfunction animate() {\\n  requestAnimationFrame( animate );\\n  cube.rotation.x += 0.01;\\n  cube.rotation.y += 0.01;\\n    renderer.render( scene, camera );\\n}\\n\\nanimate();\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"16:23 file=./basic-three-js.js title=\\\"Render loop\\\"\",\n    \"16:23\": true,\n    \"file\": \"./basic-three-js.js\",\n    \"title\": \"\\\"Render\",\n    \"loop\\\"\": true\n  }), \"const scene = new THREE.Scene();\\nconst camera = new THREE.PerspectiveCamera(\\n  75, window.innerWidth / window.innerHeight,\\n  0.1, 1000);\\nconst renderer = new THREE.WebGLRenderer();\\nrenderer.setSize( window.innerWidth, window.innerHeight );\\ndocument.body.appendChild( renderer.domElement );\\n\\nvar geometry = new THREE.BoxGeometry( 1, 1, 1 );\\nvar material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\\nvar cube = new THREE.Mesh( geometry, material );\\nscene.add( cube );\\n\\ncamera.position.z = 5;\\n\\nfunction animate() {\\n  requestAnimationFrame( animate );\\n  cube.rotation.x += 0.01;\\n  cube.rotation.y += 0.01;\\n    renderer.render( scene, camera );\\n}\\n\\nanimate();\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"file=./basic-three-js.js title=\\\"Such imperative. Wow.\\\"\",\n    \"file\": \"./basic-three-js.js\",\n    \"title\": \"\\\"Such\",\n    \"imperative.\": true,\n    \"Wow.\\\"\": true\n  }), \"const scene = new THREE.Scene();\\nconst camera = new THREE.PerspectiveCamera(\\n  75, window.innerWidth / window.innerHeight,\\n  0.1, 1000);\\nconst renderer = new THREE.WebGLRenderer();\\nrenderer.setSize( window.innerWidth, window.innerHeight );\\ndocument.body.appendChild( renderer.domElement );\\n\\nvar geometry = new THREE.BoxGeometry( 1, 1, 1 );\\nvar material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\\nvar cube = new THREE.Mesh( geometry, material );\\nscene.add( cube );\\n\\ncamera.position.z = 5;\\n\\nfunction animate() {\\n  requestAnimationFrame( animate );\\n  cube.rotation.x += 0.01;\\n  cube.rotation.y += 0.01;\\n    renderer.render( scene, camera );\\n}\\n\\nanimate();\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"file=./basic-react-three-fiber.1.js title=\\\"Example react-three-fiber code\\\"\",\n    \"file\": \"./basic-react-three-fiber.1.js\",\n    \"title\": \"\\\"Example\",\n    \"react-three-fiber\": true,\n    \"code\\\"\": true\n  }), \"import React from 'react'\\nimport ReactDOM from 'react-dom'\\nimport { Canvas } from 'react-three-fiber'\\n\\nReactDOM.render(\\n  <Canvas/>\\n  document.getElementById('root')\\n)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"6\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"6 file=./basic-react-three-fiber.1.js title=\\\"Create a scene\\\"\",\n    \"file\": \"./basic-react-three-fiber.1.js\",\n    \"title\": \"\\\"Create\",\n    \"a\": true,\n    \"scene\\\"\": true\n  }), \"import React from 'react'\\nimport ReactDOM from 'react-dom'\\nimport { Canvas } from 'react-three-fiber'\\n\\nReactDOM.render(\\n  <Canvas/>\\n  document.getElementById('root')\\n)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"file=./basic-react-three-fiber.2.js title=\\\"Create a box and add it to the scene\\\"\",\n    \"file\": \"./basic-react-three-fiber.2.js\",\n    \"title\": \"\\\"Create\",\n    \"a\": true,\n    \"box\": true,\n    \"and\": true,\n    \"add\": true,\n    \"it\": true,\n    \"to\": true,\n    \"the\": true,\n    \"scene\\\"\": true\n  }), \"import React from 'react'\\nimport ReactDOM from 'react-dom'\\nimport { Canvas } from 'react-three-fiber'\\n\\nconst Cube = () => {\\n  return (\\n    <mesh>\\n      <boxBufferGeometry attach=\\\"geometry\\\" args={[1, 1, 1]} />\\n      <meshBasicMaterial attach=\\\"material\\\" color=\\\"#00ff00\\\" />\\n    </mesh>\\n  )\\n}\\n\\nReactDOM.render(\\n  <Canvas>\\n    <Cube />\\n  </Canvas>,\\n  document.getElementById('root')\\n)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"file=./basic-react-three-fiber.js title=\\\"Render loop\\\"\",\n    \"file\": \"./basic-react-three-fiber.js\",\n    \"title\": \"\\\"Render\",\n    \"loop\\\"\": true\n  }), \"import React, { useRef } from 'react'\\nimport ReactDOM from 'react-dom'\\nimport { Canvas, useFrame } from 'react-three-fiber'\\n\\nconst Cube = () => {\\n  const ref = useRef()\\n\\n  useFrame(() => {\\n    ref.current.rotation.x += 0.01;\\n    ref.current.rotation.y += 0.01;\\n  })\\n\\n  return (\\n    <mesh ref={ref} >\\n      <boxBufferGeometry attach=\\\"geometry\\\" args={[1, 1, 1]} />\\n      <meshBasicMaterial attach=\\\"material\\\" color=\\\"#00ff00\\\" />\\n    </mesh>\\n  )\\n}\\n\\nReactDOM.render(\\n  <Canvas>\\n    <Cube />\\n  </Canvas>,\\n  document.getElementById('root')\\n)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"file=./basic-react-three-fiber.js\",\n    \"file\": \"./basic-react-three-fiber.js\"\n  }), \"import React, { useRef } from 'react'\\nimport ReactDOM from 'react-dom'\\nimport { Canvas, useFrame } from 'react-three-fiber'\\n\\nconst Cube = () => {\\n  const ref = useRef()\\n\\n  useFrame(() => {\\n    ref.current.rotation.x += 0.01;\\n    ref.current.rotation.y += 0.01;\\n  })\\n\\n  return (\\n    <mesh ref={ref} >\\n      <boxBufferGeometry attach=\\\"geometry\\\" args={[1, 1, 1]} />\\n      <meshBasicMaterial attach=\\\"material\\\" color=\\\"#00ff00\\\" />\\n    </mesh>\\n  )\\n}\\n\\nReactDOM.render(\\n  <Canvas>\\n    <Cube />\\n  </Canvas>,\\n  document.getElementById('root')\\n)\\n\"))), mdx(\"hr\", null), mdx(\"h1\", null, mdx(\"inlineCode\", {\n    parentName: \"h1\"\n  }, \"<Canvas>\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"antialiasing and translucent\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"shadowmapping\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"default perspective camera\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"three.js scene and raycaster\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"resize observer\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Lets run that code!\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://codesandbox.io/s/threejs-basic-cube-bt42h\"\n  }), \"Three.js\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://codesandbox.io/s/react-three-fiber-basic-cube-20pu8\"\n  }), \"react-three-fiber\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Events\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"works on objects with a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"raycast\"), \" method (meshes, lines etc)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onClick\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onWheel\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Pointer\"), \" events, and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onUpdate\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"events propagate starting with the closest to the camera\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"stopPropagation\"), \" to prevent further propagation\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"Hooks\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useThree\"), \": allows accessing the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SharedCanvasContext\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"useful for accessing the scene, default camera, viewport, etc.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useFrame\"), \": callback for every frame\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"useful for running effects, updating controls, etc.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useResource\"), \": creates a ref and re-renders the component when available\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"useful for sharing/reusing resources\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useUpdate\"), \": imperative updates\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useLoader\"), \": loading assets (uses \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Suspense\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useCamera\"), \": raycasting from the non-default camera\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"af281d72-bc7e-55d9-b376-0bbcd6cd488d","slug":"/react-three-fiber-deck","title":"react-three-fiber"}}}